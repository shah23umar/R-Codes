#setting the working dir
setwd("/cloud/project/DSP20")
train <- read.csv('train_kOBLwZA.csv',header = TRUE,sep = ',',na.strings = c("NA","NaN",""))
test <- read.csv('test_t02dQwI.csv',header = TRUE,sep = ',',na.strings = c("NA","NaN"," "))
#Audit
str(train)
#Summary of train dataset
summary(train)
#imputaton of missing values-itemwgt
train$Item_Weight <- ifelse(is.na(train$Item_Weight),median(train$Item_Weight,na.rm = TRUE),train$Item_Weight)
sum(is.na(train$Item_Weight))
str(train$Item_Weight)
summary(train$Item_Weight)
#solve inconsistency of Item Fat Connect
train$Item_Fat_Content <- as.character(train$Item_Fat_Content)
is.character(train$Item_Fat_Content)
train$Item_Fat_Content <- ifelse(train$Item_Fat_Content=='LF','Low Fat',train$Item_Fat_Content)
train$Item_Fat_Content <- ifelse(train$Item_Fat_Content== 'low fat','Low Fat',train$Item_Fat_Content)
train$Item_Fat_Content <- ifelse(train$Item_Fat_Content== 'reg','Regular',train$Item_Fat_Content)
train$Item_Fat_Content <- as.factor(train$Item_Fat_Content)
summary(train$Item_Fat_Content)
str(train$Item_Fat_Content)
is.factor(train$Item_Fat_Content)
table(train$Item_Fat_Content)
str(train)
summary(train)
train$Outlet_Size <- as.character(train$Outlet_Size)
is.character(train$Outlet_Size)
train$Outlet_Size <- ifelse(is.na(train$Outlet_Size),'Medium',train$Outlet_Size)
train$Outlet_Size <- as.factor(train$Outlet_Size)                            
is.factor(train$Outlet_Size)
summary(train$Outlet_Size)
summary(train)
skewness(train)
library(e1071)
skewness(train$Item_Weight)
boxplot(train$Item_Weight)
skewness(train$Item_Visibility)
boxplot(train$Item_Visibility)
skewness(train$Item_MRP)
boxplot(train$Item_MRP)
skewness(train$Item_Outlet_Sales)
boxplot(train$Item_Outlet_Sales)
table(train$Item_Type)
#df_ItemType=as.data.frame(table(train$Item_Type))

table(train$Outlet_Location_Type,train$Outlet_Size)

tbl = table(train$Item_Fat_Content,train$Item_Type)
#install.packages("MASS")
library(MASS)
chisq.test(tbl)
tbl2 = table(train$Item_Fat_Content,train$Item_Type)
table(train$Item_Fat_Content,train$Item_Type)
chisq.test(tbl2)
tbl3= table(train$Outlet_Type,train$Outlet_Location_Type)
table(train$Outlet_Type,train$Outlet_Location_Type)
chisq.test(tbl3)

cor(train$Item_Weight,train$Item_Visibility)
cor(train$Item_Weight,train$Item_MRP)
cor(train$Item_Visibility,train$Item_MRP)
cor(train$Item_MRP,train$Item_Outlet_Sales)
cor(train$Item_Weight,train$Item_Outlet_Sales)
#install.packages("Hmisc")
library(Hmisc)
describe(train)
plot(train$Item_MRP,train$Item_Outlet_Sales)
plot(train$Item_Weight,train$Item_MRP)
plot(train$Item_Visibility,train$Item_MRP)
train$Ln_Item_weight <- log(train$Item_Weight)
skewness(train$Ln_Item_weight)
skewness(train$Item_Weight)
log(100)
train$Ln_Sales <- log(train$Item_Outlet_Sales)
skewness(train$Ln_Sales)
skewness(train$Item_Outlet_Sales)
train$Ln_visibity <- log(train$Item_Visibility)
skewness(train$Ln_visibity)
skewness(train$Item_Visibility)
train$Item_Weight_scale <- scale(train$Item_Weight)
skewness(train$Item_Weight_scale)
train$Item_Outlet_Sales_Scale <- scale(train$Item_Outlet_Sales)
skewness(train$Item_Outlet_Sales_Scale)
skewness(train$Item_Outlet_Sales)
#creating a new var
train$YOB <- 2019-train$Outlet_Establishment_Year
#apply a  regression
model <- lm(Item_Outlet_Sales~Item_Weight+Item_Visibility+Item_MRP+YOB,data = train)
summary(model)
train$preds_sales <- predict(model,train)
rmse_model <- sqrt(mean((train$Item_Outlet_Sales-train$preds_sales)^2))
print(rmse_model)
model1 <- lm(Item_Outlet_Sales~Item_Weight+Item_Visibility+Item_MRP+YOB+Item_Type+Item_Fat_Content+Outlet_Size+Outlet_Location_Type+Outlet_Type,data = train)
summary(model1)
train$preds1_sales <- predict(model1,train)
rmse_model1 <- sqrt(mean((train$Item_Outlet_Sales-train$preds1_sales)^2))
print(rmse_model1)

#####Preparation of Test Data#####
summary(test)
test$Item_Weight <- ifelse(is.na(test$Item_Weight),median(test$Item_Weight,na.rm = TRUE),
                           test$Item_Weight)
sum(is.na(test$Item_Weight))
str(test$Item_Weight)
summary(test$Item_Weight)
test$Item_Fat_Content <- as.character(test$Item_Fat_Content)
is.character(test$Item_Fat_Content)
test$Item_Fat_Content <- ifelse(test$Item_Fat_Content=='LF','Low Fat',test$Item_Fat_Content)
test$Item_Fat_Content <- ifelse(test$Item_Fat_Content=='low fat','Low Fat',test$Item_Fat_Content)
test$Item_Fat_Content <- ifelse(test$Item_Fat_Content=='reg','Regular',test$Item_Fat_Content)
test$Item_Fat_Content <- as.factor(test$Item_Fat_Content)
summary(test$Item_Fat_Content)
str(test$Item_Fat_Content)
is.factor(test$Item_Fat_Content)
table(test$Item_Fat_Content)
str(test)
summary(test$Item_Fat_Content)
summary(test)
test$Outlet_Size <- as.character(test$Outlet_Size)
is.character(test$Outlet_Size)
test$Outlet_Size <- ifelse(test$Outlet_Size=='','Medium',test$Outlet_Size)
test$Outlet_Size <- as.factor(test$Outlet_Size)
is.factor(test$Outlet_Size)
table(test$Outlet_Size)

summary(test$Outlet_Size)
summary(test)
#test <- read.csv('test_t02dQwI.csv',header = TRUE,sep = ',',na.strings = c("NA","NaN"," "))
#sum(is.na(test$Outlet_Size))
#skewness(test)

skewness(train$Item_Weight)

boxplot(train$Item_Weight)
skewness(train$Item_Visibility)

skewness(train$Item_MRP)
test$YOB <- 2019 - test$Outlet_Establishment_Year
summary(test)
test$Sale_preds_reg <- predict(model1,test)
write.csv(test,'Submit.csv')
###################Decision Tree BigMart################
library(party)
ct <- ctree(Item_Outlet_Sales~Item_Weight+
              Item_Fat_Content+Item_Visibility+
              Item_Type+Item_MRP+Outlet_Size+Outlet_Location_Type+
              YOB, data = train) 
train$preds_ct <- predict(ct,train)
rmse_ct <- sqrt(mean((train$Item_Outlet_Sales-train$preds_ct)^2))
print(rmse_ct)
install.packages('ggplot2')
library(ggplot2)
install.packages(rpart.plot)
library(rpart.plot)
rpart.plot(ct)
##########Test Decision Tree Bigmart###########3
test$Sale_preds_ct <- predict(ct,test)
write.csv(test,'Submit_CT.csv')
###############Random Forest Bigmart###############
library(randomForest)
rf <- randomForest(Item_Outlet_Sales~Item_Weight+
                     Item_Fat_Content+Item_Visibility+
                     Item_Type+Item_MRP+Outlet_Size+Outlet_Location_Type+
                      YOB, data = train)
train$preds_rf <- predict(rf,train)
rmse_rf <- sqrt(mean((train$Item_Outlet_Sales-train$preds_rf)^2))
print(rmse_rf)
##############Test Random Forest Bigmart ##################
test$Sale_preds_rf <- predict(rf,test)
write.csv(test,'Submit_RF.csv')
######Ensemble Model ##################
train$Final_preds=(train$preds_sales+train$preds_rf+train$preds_ct)/3
final_rmse <- sqrt(mean((train$Final_preds-train$Item_Outlet_Sales)^2))
print(final_rmse)
